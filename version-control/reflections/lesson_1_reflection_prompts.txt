How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Fill in your answer here

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Fill in your answer here

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    A:Manually commit leads a reasonable and logic change record,so anybody reads the README file,he or she can easily understand where,how and when the authors modified it.It's friendly to readers.But of course you must commit a new version-control by yourself,it takes times.
    As it to automatically saved,it's convenient means you don't need to concern about when should you saved and the system had already finished.At the same time,when you open the versions history,you may find it's hard to understand which commit is really helpful for you.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Fill in your answer here

How can you use the commands git log and git diff to view the history of files?

    Fill in your answer here

How might using version control make you more confident to make changes that
could break something?

    Because I can use "git checkout" get back to the old version,even if I made some mistakes,I'm permitted to fix them easily.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
